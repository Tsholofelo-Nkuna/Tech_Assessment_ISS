@using Question3.Models.DataTransferObjects
@using Question3.PresentationLayer.Controllers
@using Question3.PresentationLayer.Views.Shared.Components.FormComponent
@using Question3.PresentationLayer.Views.Shared.Components.TableComponent
@model ClientsViewModel;
@{
    ViewData["Title"] = "Home Page";
}

<div>
    @(await Component.InvokeAsync(
        nameof(FormComponent), 
        new {
            options = Model.SearchFormComponentViewModel
        }))
</div>
<div class="card bg-light my-2">
    <div class="card-header">
        <div class="d-flex">
            <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#new-client-modal">
                New
            </button>
        </div>
    </div>
    <div class="card-body">
        @(await Component.InvokeAsync(nameof(TableComponent), new {options = Model.TableConfig}))
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="new-client-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Client</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                  
                </button>
            </div>
            <form asp-action="@nameof(HomeController.AddOrUpdate)" asp-controller="Home">
                <div class="modal-body" style="max-height:412px; overflow-y:auto;">
                    <div id="client-details">
                        @(await Component.InvokeAsync(
                            nameof(FormComponent),
                            new
                            {
                                options = Model.NewClientFormViewModel
                            })
                            )
                    </div>
                    <h5 class="my-3">Primary Contact Details</h5>
                    <div id="primary-contact-person">
                        @(await Component.InvokeAsync(nameof(FormComponent),
                            new { options = Model.PrimaryContactFormViewModel }
                            ))
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" onclick="newClientSubmitClick()" class="btn btn-primary">Submit</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        function newClientSubmitClick(){

          const form = new FormData();
          const clientDto = [...document.querySelectorAll("#new-client-modal .form-control")]
          .forEach(x => {
              form.append(x.name, x.value);
          });

          const formElements = [...document.querySelectorAll("#new-client-modal form")];
          const isValid = [...document.querySelectorAll("#new-client-modal form")]
           .map(x => x.checkValidity())
           .reduce((carry, next)=> carry && next, true);

         if(isValid){
                const url = '@(Url.ActionLink(nameof(HomeController.AddOrUpdate), "Home"))';
                console.log(url);
                fetch(url, {
                    method: "post",
                    body: form
                }).then( response => {
                  //  var html = await response.text();
                   // document.write(html);
                    
                });
         }else{
             formElements.forEach(e => e.classList.add("was-validated"));
         }
        

        }
    </script>
}
